---
import { Image } from "astro:assets";

export interface Props {
  photos: Array<any>;
  newestFirst?: boolean;
  biggerPictures?: boolean;
  isMainPage?: boolean;
}

let {
  photos,
  newestFirst = true,
  biggerPictures = false,
  isMainPage = false,
} = Astro.props;

if (newestFirst) {
  photos.reverse();
}

export let classList: Array<string>;

classList = biggerPictures
  ? [
      "min-[2800px]:columns-7",
      "min-[2400px]:columns-6",
      "min-[2100px]:columns-5",
      "min-[1980px]:columns-4",
      "lg:columns-3",
      "md:columns-2",
      "columns-1",
      "gap-4",
      "md:gap-6",
      "lg:gap-8",
      "break-inside-avoid",
    ]
  : [
      "min-[2800px]:columns-8",
      "min-[2400px]:columns-7",
      "min-[2100px]:columns-6",
      "min-[1980px]:columns-5",
      "lg:columns-4",
      "md:columns-3",
      "sm:columns-2",
      "columns-1",
      "gap-4",
      "md:gap-6",
      "lg:gap-8",
      "break-inside-avoid",
    ];
---

<div class={classList.join(" ")}>
  {
    photos?.map(async (photo: any) => {
      const picture = await photo.default;
      const fileName = picture.src.split("/").pop();
      // photoURL fix for production
      const lightboxPhotoUrl = import.meta.env.PROD
        ? `https://ojoanalogo.com${photo.default.src}`
        : `${photo.default.src}`;

      return (
        <div class="break-inside-avoid">
          <a
            class="cursor-pointer"
            data-href={lightboxPhotoUrl}
            data-fslightbox
            data-umami-event="Photo click"
            data-umami-event-photo-id={fileName}
          >
            <Image
              class="mb-4 w-full object-cover scale-100 hover:shadow-md ease-in duration-300"
              src={picture}
              decoding="async"
              loading="lazy"
              alt=""
              quality={"mid"}
              width={picture.width / 2}
            />
          </a>
        </div>
      );
    })
  }
</div>
